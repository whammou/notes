#+TITLE: Capture
#+DESCRIPTION: Captures and Quick notes
#+OPTIONS: ^:nil

* DOING Orgmode Manual [85%] :ORGMODE:
CLOSED: [2024-11-07 Thu 06:08]
/Because =orgzly-android= is under development and features are limited some implementations will be a work around and possibly revisit in the future, check for request features/ [[https://github.com/orgzly-revived/orgzly-android-revived/issues/88][prioritized requested features]]
** DONE Orgmode Include Files
CLOSED: [2024-09-06 Fri 21:35]
:PROPERTIES:
:ARCHIVE_TIME: 2024-09-11 Wed 04:59
:ARCHIVE_FILE: /home/whammou/notes/personal.org
:ARCHIVE_CATEGORY: personal
:ARCHIVE_TODO: TODO
:END:
- *OBJECTIVE:* Include files from across org files
- *Resources:* [[https://orgmode.org/manual/Include-Files.html][org manual]]
** DONE Orgmode Search
CLOSED: [2024-09-30 Mon 03:38]
- *Goal(s):* Learn to search in orgmode repo
tumble-upon:* [[https://www.orgzlyrevived.com/docs#search][orgzly-manual]]  [[https://orgmode.org/worg/org-tutorials/advanced-searching.html][nvim-orgmode]]

/For now, =orgzly-android= does not support search by property, check/ [[https://github.com/orgzly/orgzly-android/issues/146][issue:search by property drawer]]
** DONE Orgmode Hyperlink
CLOSED: [2024-10-08 Tue 22:58]
- *Visit:* [[https://github.com/nvim-orgmode/orgmode/blob/master/DOCS.md#hyperlinks][nvim-orgmode#hyperlink]] see how nvim-orgmode handle hyperlink
- *Note:* Cross file include
** DONE Orgmode Tag
CLOSED: [2024-10-01 Tue 06:03]
- *Visit:* [[https://www.orgzly.com/docs#search][orgzly#search]] how orgzly handle headline =tag=
- *Suggestion:* Use [[./README.org][README]] to generate a list of =tags= and its =description=
** DONE Orgmode PROPERTIES
CLOSED: [2024-10-01 Tue 06:03]
- *Goal(s):* Read [[https://orgmode.org/manual/Properties-and-Columns.html][PROPERTIES@orgmanual]] 
*** Property Syntax
A. Properties are key-value pairs. When they are associated with single entry or with a tree they need to inserted in to special drawer with the name =:PROPERTIES:=, which has to located right below a headline, and its planning line
B. Depend on the value of =org-use-property-inheritance=, a property set this way is associated either with a single entry, or with the subtree defined by the entry
C. Properties can be inserted at the buffer level. That means they apply before the first headline and can be inherited by all entries in a file. Property blocks defined before the first headline must be at the top of the buffer with only comments above them

- /Note that a property can only have one try per drawer/

Property values set with the global variable =org-global-properties= can be inherited by all entries in all Org files
*** Special Properties
Special properties provide an alternative access method to Org mode features, like the TODO sate or the priority of an entry:

- =#+FILETAG: :FOO:BAR:=: notebook tag
** DOING Org2ical [%] :DATA:
- *OBJECTIVE:* Generate .ics files from .org files(use homelab for daily merge)
- *Visit:*  [[https://pypi.org/project/org2ical/][org2ical package]] [[https://github.com/jacobmischka/ics-merger][icals merger]]
*** DOING [#B] Sync orgmode to CalDav [0%] :KHALORG:
- *OBJECTIVE:* /Succefully sync between orgmode and caldav for professional uses/
  - *Visit:* [[file:/home/whammou/dots/BartSte/dotfiles/nvim/lua/config/orgmode.lua][orgmode config @Git]]
  - *References:* [[https://github.com/BartSte/khalorg][khalorg @Github]]
**** TODO Config vdirsyncer :VDIRSYNCER:
- *OBJECTIVE:* /Config vdirsyncer to work sync calendar to google cal/
  - *References:* [[http://vdirsyncer.pimutils.org/en/stable/when.html][Vdirsyncer documentation @Doc]]
** DONE Orgmode social media integrate
CLOSED: [2024-12-26 Thu 22:28]
* TODO Config system notification :NOTIFICATION:
- *OBJECTIVE:* /Config system notifications with dunst/
  - *Run:* =man dunst=
  - *File:* [[file:=/.config/dunst/dunstrc][dunst config @Confini]]
  - *Visit:* [[id:45d7010b-dd20-44c8-a271-51ac24ba840e][Icon packs @Orgmode]]
** DONE Dunst notification stacking [100%] :DUNST:
CLOSED: [2025-06-04 Wed 09:07]
- [X] *OBJECTIVE:* /Stack notifications/
- +[ ] *OBJECTIVE:* /Interacte with stacked+ notifications/
- *References:*
  - [[https://github.com/dunst-project/dunst/issues/321][Dunst notification stacking @Github-issue]]
  - [[https://dunst-project.org/documentation/][Documentaion @Dunst-doc]]
** TODO Notification colorscheme
:PROPERTIES:
:ID:       f8ffc50b-03a6-4be9-842a-2c6278a62b86
:END:
- *OBJECTIVE:* Create a comprehensive colorscheme to notifications/
* TODO Working with git [0%] :GIT:
- *OBJECTIVE:* /Improve workflow with nvim, fugitive, lazygit/
- *References:*
  - [[https://youtu.be/vtFXMni91Q4#__preview][Fugitive workflow @Youtube-preview]]
  - [[https://www.youtube.com/watch?v=G3NJzFX6XhY#__preview][Config your git @Youtube]]
** TODO Write better commit messages
- *Goal(s):* Write better and more comprehensive commit messages
- *Stumble upon:* [[https://www.freecodecamp.org/news/how-to-write-better-git-commit-messages/]]
*** The Anatomy of a Commit Message
- *Basic:*
  =git commit -m <message>=
- *Detailed:*
  =git commit -m <title> -m <description>=
*** 5 Steps to write a better commit message
- Note taken on [2024-09-21 Sat 21:37] \\
  To come up with thoughtful commits consider the following: 
  - Why have I made these changes?
  - What effect have my changes made?
  - Why was the change needed?
  - What are the changes in reference?
    
1. *Capitalization and Punctuation:*
   Capitalize the first word and do not end in punctuation. If using /Convention Commits/, remember to use all lowercase
2. *Mood:*
   Use imperative mood in the subject line. *Example -* =Add fix= for =dark mode toggle state=. Imperative mood fives the tone you are giving in /order/ or /request/
3. *Type of Commit:*
   Specify the type of commit. It is recommended and can be even more beneficial to have consistent set of words to describe your changes. *Example:* /Bugfix/, /Update/, /Retractor/, /Bump/, and so on.
4. *Length:*
   The first line should ideally be no longer than 50 chars, and the body should be restricted to 72 chars
5. *Content:*
   Be direct, try to eliminate fillers words and phrases in theses sentences (*Example:* though, maybe, I think, kind of), Think like a journalist
*** Conventional Commits
Conventional Commit is a formatting convention that provides as set of rules to formulate a consistent commit message structure like so:

#+NAME: Conventional Commit structure
#+BEGIN_SRC
<type>[option scope]: <description>

[optional body]

[optional footer(s)]
#+END_SRC

The commit =type= can include the following:

- =feat= -a new feature is introduces with the changes
- =fix= -a bug fix has occurred
- =chore= -changes that do not relate to a fix or feature and don't modify src or test files (for example updating dependencies)
- =refractor= -refactored code that neither fixes a bug nor adds a feature
- =doc= - updates to documentation such as the README or other markdown files
- =style= -changes that do not affect the meaning of the code, likely realted to code formatting such as white-space, missing semi-colons, and so on
- =test= -including new or correcting previous tests
- =perf= -performance improvements
- =ci= -continuous integration related
- =build= -changes tha affect the build system or external dependencies
- =revert= -reverts a previous commit
  
/The commit type subject line should be all lowercase with a character limit to encourage succinct descriptions/

The =[optional commit body]= should be used to provide detail that cannot fit within the character limitations of the subject line description

It is also good location to utilize =BREAKING CHANGE: <description>= to note the reason for a breaking change within the commit

The =[footer]= is also optional. We use the footer to link the JIRA story what would be closed with these changes for example:
=Closes D2!I-<JIRA #>=

#+NAME: Full Conventional Commit Example
#+BEGIN_SRC
fix: fix foo to enable bar

This fixes the broken behavior of the component by doing xyz. 

BREAKING CHANGE
Before this fix foo wasn't enabled at all, behavior changes from <old> to <new>

Closes D2IQ-12345
#+END_SRC

- *NOTE*
  The ensure that these committing conventions remain consistent across developers, commit message linting can be configured before changes are able to be pushed up. [[https://commitizen-tools.github.io/commitizen/][Commitizen]] is a great tool to enforce standards, sync up semantic versioning, along with other helpful features
** TODO Git automation
- *OBJECTIVE:* /Automate tasks with git/
- *References:* [[https://www.reddit.com/r/git/comments/xvz4he/automating_git_tasks_best_practices/][Automation with git @Reddit]]
** TODO Clean commit history
- *OBJECTIVE:* Clean up git commit history
- *Reference:* [[https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History][Git tools rewrite history @Doc-git]]
** TODO Securely storing secrets in git
- *OBJECTIVE:* Learn how to securely store secrets in git
* TODO Working with pandoc :PANDOC:
- *OBJECTIVE:* /Develop workflow with pandoc to convert between files/
** TODO Pandoc font settings :PANDOC:
Set conversion fonts from =markdown= to =LaTex=
*Visit:* [[https://a.opnxng.com/exchange/tex.stackexchange.com/questions/234786/how-to-set-a-font-family-with-pandoc][pandoc fonts]]
* DOING Integrating AI [50%] :AI:
- *OBJECTIVE:* /Integrate AI to current workflow/
- *Resource:*
  - [[https://www.reddit.com/r/ChatGPT/comments/1akynsv/any_free_alternatives_to_open_ai_api/][Google AI Studio @Google-studio]]
  - [[https://ai.google.dev/docs][Google AI docs @Google-dev]]
** DONE Working with Google AI :GEMINI:
CLOSED: [2025-05-28 Wed 03:24]
- *Goal(s):* create workspace with [[https://pypi.org/project/google-generativeai/][google-generativeai sdk @Pypi]]
- *Resources:*
  - [[https://github.com/google-gemini/cookbook][Cookbook @Github]]
  - [[https://ai.google.dev][Documentation @Google-dev]]
*** DONE Requesting API
CLOSED: [2025-01-10 Fri 02:28]
- *Goal(s):* successfully obtain working API for Google Gemini
- *Resource:* [[https://console.cloud.google.com/apis/credentials?pli=1&inv=1&invt=AbmaIA][Google cloud console]]
  - Obtain working API through google cloud console
  - NOTE: only 1 API per project
- *Note:* looking up for platform free tier limitation
**** DONE Making request via script
CLOSED: [2025-01-10 Fri 02:27]
- *Goal(s):* make request from terminal to Gemini
- *Note:* use the [[https://ai.google.dev/api/generate-content#method:-models.generatecontent][=generateContent=]] to make request to Gemini API
  #+NAME: Make request to Gemini API
  #+BEGIN_SRC python
  import google.generativeai as genai
  
  genai.configure(api_key="YOUR_API_KEY")
  model = genai.GenerativeModel("gemini-1.5-flash")
  response = model.generate_content("Explain how AI works")
  print(response.text)
  #+END_SRC
** TODO Working with fabric :FABRIC:
- *OBJECTIVE:* /Integrate fabric to current workflow/
- *References:*
  - [[https://github.com/danielmiessler/fabric][Fabric @Gtihub]]
  - [[https://www.reddit.com/r/PromptEngineering/][r/PromptEngineering @Reddit]]
*** TODO Fzf menu script :FZF:
:PROPERTIES:
:ID:       36141277-e892-4034-a47e-468c825e188b
:END:
- *OBJECTIVE:* /Use fzf menu to quickly output notes from ai/
- *Reference:* [[https://www.youtube.com/watch?v=qwpK4rqAZwA&t=57#__preview][notekami @Youtube-gotbletu]]
** TODO Shell Integrations :SHELL:
:PROPERTIES:
:ID:       4af0707d-93ed-4689-b971-15c9ebfebdd8
:END:
- *Goal(s):* working on integrate AI with =kitty=
- [IDEA] Run fabric with current hint-url
  - To implement, run: =fabric -uy <hint-url> | fabric -p <pattern> -o <output>=
    - [ ] Query  [[file:=/.config/fabric/patterns/][=<patterns>=]] with =fzf-menu=
    - [ ] Create output =hierarchy=
- *Visit:*
  - [[id:90a03e2c-edb3-4afd-8252-462b6d912cbe][Improve kitty worflow @Orgmode]]
  - [[id:f0e11344-5210-4709-b5df-f6de28e7ee7a::*Function fzf][Fzf menu @Orgmode]]
*** TODO Integrate with fabric and kitty :FABRIC:KITTY:
- *Idea:* Implement printing outputs for fabric
- *Visit:*
  - [[id:90a03e2c-edb3-4afd-8252-462b6d912cbe][Improve kitty worflow @Orgmode]]
  - [[id:4af0707d-93ed-4689-b971-15c9ebfebdd8][Shell Integrations @Orgmode]]
** PENDING Nvim integration :NVIM:
CLOSED: [2025-05-28 Wed 04:03]
- *Goal(s):* render response in markdown to take advantage of nvim markdown render
* TODO Config terminal app titles :UI:
- *OBJECTIVE:* /Config terminal app titles/
  - Config title to look the same: =<content> - <appname>=
* TODO Windows software on linux :WINDOWS:LINUX:
- *OBJECTIVE:* Running windows exclusive software on linux e.g., cad, offices, pts/
** Running Virtual machines :VM:
- *Keypoint:* /Virutal machine on linux/
- *References:*
  - [[https://l.opnxng.com/r/docker/comments/q6ykxa/when_should_you_choose_vms_over_docker/][Docker vs Vms when @Reddit]]
  - [[https://www.atlassian.com/microservices/cloud-computing/containers-vs-vms][VMs vs Dockers differences @Atlassian]]
  - [[https://l.opnxng.com/r/linuxquestions/comments/144nvkt/how_viable_is_it_to_use_a_windows_virtual_machine/][How viable is using wm wind on linux @Reddit]]
*** CAD softwares :CAD:SOLIDWORKS:
- *OBJECTIVE:* Running CAD Software on linux/
- *Reference:* [[https://github.com/cryinkfly/SOLIDWORKS-for-Linux][Soliworks on linux @Github]]
** Running remote software
- *OBJECTIVE:* Connect to a running remote desktop from linux/
- *Reference:*
  - [[https://l.opnxng.com/r/linux4noobs/comments/148dko9/looking_for_remote_software_for_linux_laptop_to/][Remote software for linux desktop @Reddit]]
  - [[https://www.youtube.com/watch?v=EXL8mMUXs88#__preview][Remote desktops foss @Youtube-preview]]
* DOING Working with rclone [66%] :RCLONE:
:PROPERTIES:
:ID:       3700b025-3d42-4516-a17d-0eb37366d087
:END:
- *OBJECTIVE:* /Config rclone for optimal workflow/
** ABORTED Mount as a systemd service :SYSTEMD:
CLOSED: [2025-06-03 Tue 07:45]
- *OBJECTIVE:* /Running rclone mount as a systemd service/
- *References:* [[https://rclone.org/commands/rclone_mount/][Rclone mount @Doc-rclone]]
** DOING Mount dir menu [50%] :ROFI:
:PROPERTIES:
:ID:       657f70b1-56fe-4503-93cb-3a2987f002e8
:END:
- [X] *OBJECTIVE:* /Mount directories via rofi menu/
+- [ ] *OBJECTIVE:* /Config mount point dest/+
- *Checkout:* related files
  - [[file:=/.config/qtile/settings/widgets.py][widgets.py @Qtile-config]]
  - [[file:=/dotfiles/scripts/rofi-mount][rofi-mount @Rofi-script]]
- *References:* [[https://l.opnxng.com/r/archlinux/comments/15mz7rj/bash_script_to_mountunmount_rclone_affiliated/?tl=zh-hant][Script mount/umount rclone mount points @Reddit]]
*** TODO Change icons in qtile bar accordingly
- *Complication:* Icons for mulitple clouds
** DONE Workaround rclone cache mode
CLOSED: [2025-06-03 Tue 07:43]
:PROPERTIES:
:ID:       b1c36c41-af26-452e-9bca-002fc835cc5f
:END:
- *OBJECTIVE:* /Cache mode takes a lot of space, workaround this issue/
- *Checkout:* [[https://forum.rclone.org/t/why-arent-cache-rclone-files-being-removed/28948/8][Vfs cache explain @Forum-rclone]]
- *References:* [[https://l.opnxng.com/r/rclone/comments/xnbhsx/rclone_mount_with_vfs_cache_mode_full_is_using_up/][Cache mode using up space @Reddit]]
* TODO Files hierarchy :FILE:
- *OBJECTIVE:* /Manage files with better hierarchy/
- *References:* [[https://l.opnxng.com/r/linux/comments/om150l/personal_file_hierarchy_under_home/][Home hierarchy @Reddit]]
* TODO Pacman lock-file :PACMAN:BACKUP:
- *OBJECTIVE:* /Create pacman lock-file/
* Working with nvim snippets :NVIM:SNIPPET:
- *OBJECTIVE:* Custom snippets to boost productivity
** TODO Friendly snippet insert date :FRIENDLYSNIP:
- *OBJECTIVE:* /Create note block with today inserted/
- *References:* [[https://l.opnxng.com/r/neovim/comments/wi4uf3/how_do_i_insert_current_date_or_time/][Insert today date in friendly snippet @Reddit]]
** Setting up luasnip :LUASNIP:
- *OBJECTIVE:* Writing custom luasnip snippets
* TODO Create scripted tmux session :TMUX:
- *OBJECTIVE:* Create a persist session for orgmode notes/
- *Complication:* nvim does not allow edit if multiple session are running
- *Reference:* [[https://ryan.himmelwright.net/post/scripting-tmux-workspaces/][Scripting tmux workspace @Blog]]
* TODO Handle exception in python :PYTHON:
- *OBJECTIVE:* Handle exceptions error from populating logs/
- *Reference:*
  - [[https://m.opnxng.com/@akulahemanth/pythons-contextlib-suppress-a-clean-way-to-handle-exceptions-db7439e32025][Clean way to handle error exception @Blog]]
  - [[https://l.opnxng.com/r/learnpython/comments/stfbow/how_to_tell_python_to_ignore_list_out_of_index/][Ignore list out of index @Reddit]]
* PENDING Qtile notification bug :QTILE:
- *OBJECTIVE:* Notification disappear when fire/ =hide_floating()=
* DOING Prettify orgmode documents [50%] :ORGMODE:
- *OBJECTIVE:* Prettify my org documents
- *Reference:* [[https://orgmode.org/manual/Export-Settings.html][Export settings @Orgmode-document]]
** DONE Github orgmode feature :GITHUB:
CLOSED: [2025-06-19 Thu 23:36]
- *OBJECTIVE:* Testing github render and feature for org notes
- *Checkout:* [[id:7fd3eabc-0cd2-43bb-b3b3-a31c018163b2][Github render tests [100%] @Orgmode]]
- *Reference:* [[https://github.com/noncog/github-org-mode-hacks][Github orgmode hacks @Github]]
** TODO Org-ruby document config
- *OBJECTIVE:* Config orgmode for better document render on github
- *Reference:* [[https://orgmode.org/worg/org-tutorials/org-ruby.html][Org-ruby documentation @Doc-orgmode-ruby]]
* TODO Orgmode quicknote script :ORGMODE:
- *OBJECTIVE:* Quickly output new note directory
* Change snack.nvim border style :NVIM:
- *OBJECTIVE:* Replace rounded border style in snack.nvim with static style for more aesthetic
- *Reference:* 
  - [[http://www.lazyvim.org/plugins][Lazyvim core plugins @Doc-lazyvim]]
  - [[https://github.com/LazyVim/LazyVim/issues/1942#issuecomment-1793438952][Changing border with nvim-lspconfig @Github-issue]]
