#+TITLE: Plain Text Accounting
#+DESCRIPTION: A guide on how to manage personal finance with plain text accounting community 

* Manage Finance with ~Big Data Languages~ :FINANCE:ARCHIVE:
CLOSED: [2024-09-28 Sat 11:44]

*Goal(s):* Research technique to manage efficiently manage money with BDL (e.g. .cvs .js)

*Stumble upon:* [[https://aldur.pages.dev/articles/2024/03/01/beancount][Beancout-nvim guide]]

** Resources

*** Community

*Visit:* [[https://plaintextaccounting.org/][plaintextaccoutning.org]]

*** Ledger cli

**** Documentation

- *Visit:* [[https://ledger-cli.org/docs.html][ledger docs]]

**** Youtube

- *Visit:* [[https://youtube.com/watch?v=FJtaM43PgXQ][Dean Collin]]

*** Reddit

- *Visit:* [[https://redlib.seasi.dev/r/plaintextaccounting/][r/plaintextaccounting]]

** Plain text vs Spreadsheets data tracking

*.csv* file is a simple type of plain text file which uses a specific structure to arrange tabular data. The standard format of a CSV file is defined by rows and columns data where a newline is terminates each row to begin the next row, and each column is separated by a comma within the row

*.xlxs* file is a Excel format spreadsheet software. It is widely use to create tables and grids of numbers and formulas that specify calculations, inventory tracking, accounting and more

** Plain-text data tracking
- Note taken on [2024-09-13 Fri 02:42] \\
  Most plain text accounting implementations use signed amounts instead of ~debits~ and ~credits~. This makes them "double entry light" , but it has been a rather successful simplification.

The plain text storage format is open, human-readable, future-proof, scales smoothly with complex needs and taps a huge ecosystem of highly useful tooling such as version control systems. Ans despite the name, there's no reason these tools can't support other kinds of storage, such as database

*** What is plain text accounting (PTA)

Tracking of flows of valuable commodities, such as money or time. It clarifies activity, priorities, obligations, opportunities, It can reduce stress and even be enjoyable

*** Characteristics of Plain Text Accounting

Accounting data id valuable; we want to know that it will be accessible for ever -even without software. We want to search and manipulate it efficiently so we store it as human-readable ~plain text~ 

- Simplify debits and credits by using *signed numbers* - ~positive for inflows to an accout. negative outflows from an account~

- Arbitrary ~account hierachy~ to suit our needs. This scales smoothly from simple to complex scenarios, and from high-level overview to fine detail 

*** Advantages over spreadsheets

- Recording complex transactions(double entry, arbitrary splits) is harder in spreadsheets
- ~Spreadsheets~ are so flexible that each one is unique, common community-wide format
- The usual advantages of plain text mentioned above (longevity, readability, version control, etc)

*** Some Alternatives

Traditional GUI-centric accounting software:
- Free/open-sources: GNUCash, Grisbi, KMyMoney
- Online/Cloud-based accounting software: Xero, FreeAgent

** Ledger data format

- *Goal(s):* Create simple personal ledger to manage flows i/o 

** IN-PROGESS Accounting Basics
:PROPERTIES:
:CUSTOM_ID: accounting_basics
:END:

Accounting basics and further study

*** Debits and Credits

~Double-entry bookkeeping~ traditionally names movements of money as *debits* or *credits*. As an error-checking mechanism, the debits must exactly balance the credits, both within each individual transaction and over all transactions

*** Signed Numbers

~(+)~ and ~(-)~ integers instead of debit and credit labels. This is essentially the same system. 

- ~(+)~ integers are debits
- ~(-)~ integers are credits

And within each transaction the sum of amounts must be zero

/As a consequence PTA tools, its common for reports to show equity, liability, and revenue balances as negative numbers/

*** Assets, Liabilities and Equity

Accounting describes the status of a business, person or other entity at any point in time in terms of three amounts

- *Assets* - Things owned
- *Liabilities* - Things owed
- *Equity* - The amount invested by owners/shareholders

The foundation of double-entry accounting is the ~accouting equation~, which says Equity is always equal to Assets minus Liabilities (or, Net Assets)

or *Assets* = *Liabilities* + *Equity*

These three are called the ~Balance Sheet accounts~. Their balances summarise the overall financial status at some point in time

*** Revenue and Expenses

Two more amounts are used to describe changes in the above during a given period:

- *Revenue* - Money flowing in
- *Expenses* - Money flowing out

/In come is sometimes used to mean Net income, which is Revenue - Expenses/

These two are called ~Income Statement accounts~. The balances they accumulate during some period of time indicate the inflows and outflows during that period (which will affect the Assets and Liabilities balances)

*** Chart of Accounts

Five numbers do not give 

** IN-PROGESS Double-entry accounting

*** Resources

Visit:* [[http://furius.ca/beancount/doc/double-entry][The Double-Entry Counting Method]]
Visit:* [[https://youtube.com/watch?v=EibibVFEkvk][youtube@The Finance Story Teller]]

*** Terminology

Detail can be found in [[#accounting_basics]]

Double-entry bookkeeping is the standard method for keeping accounting records reliable. Fore every movement of value(a transaction), both the source and destination are recorded

Value at any point in time is tracked in various ~accounts~, classified as ~asset~ (owned), ~liability~ (owed) or ~equity~ (invested). Two more classifications track changes during some period: ~revenues~ (inflows) and ~expenses~ (outflows) 

Transactions consists of ~debits~ (increase to asset or expense accounts or decrease to liability or equity accounts)

*** Introduction

General rule: /The sum of ~Debit~ entries is equal to the sum of ~Credit~ entries/
file:finance/assets/DEA1.jpg

