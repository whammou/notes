#+TITLE: Package Documents
#+DESCRIPTION: Description for archive here
#+OPTIONS: ^:nil

* Documents :DOC:SYSTEM:PACKAGE:
/Documents archives/
** PARTIAL Qutebrowser configuration [77%] :QUTEBROWSER:
CLOSED: [2025-06-10 Tue 01:04]
- *OBJECTIVE:* implement text to speech to qutebrowser
  - *Visit:* [[https://redlib.seasi.dev/r/qutebrowser/comments/w4pv2v/configpy_ideas/][Qutebrowser tts config idea @ Reddit]]
*** DONE Rebind set-mark function
CLOSED: [2025-01-28 Tue 03:19]
- *OBJECTIVE:* rebind set-mark func to match vim
- Note taken on [2025-05-06 Tue 21:43] \\
  - Bookmark bind
    #+NAME: config.py bind command
    #+BEGIN_SRC: python
    config.bind('m', 'mode-enter set_mark')
    #+END_SRC
*** DONE Qutebrowser start-page
CLOSED: [2025-05-04 Sun 08:44]
- *OBJECTIVE:* /Add qutebrowser start-page/
  - *Visit:* [[https://nimplex.github.io/Minimal-StartPage/][start-page @ Search]]
*** DONE Qutebrowser with Qtile [100%] :QTILE:
CLOSED: [2025-05-22 Thu 06:03]
- *OBJECTIVE:* /Integrate qutebrowser to qtile window manager/
**** DONE Workaround window-bg
CLOSED: [2025-05-07 Wed 12:28]
:PROPERTIES:
:ID:       7a4c8a36-bc6b-4050-9448-a2aa9403ad16
:END:
:LOGBOOK:
- Note taken on [2025-05-05 Mon 07:26] \\
Workaround ~qutebrowser~ using ~xdotool~ to detect invisible ~windows~ and take advantage of ~tabs.tabs_are_windows~ to set every ~tabs~ to ~windows~ ~new_instance_open_target~ to set newly spawned ~windows~ to ~bg-windows~
**Commit:* [[https://github.com/whammou/dotfiles/commit/bd57d28a018468f17aa233bc31158da9730af7f4][Qutebrowser workaround @ Github]]
:END:
- *OBJECTIVE:* /Run new window in background (prevent focus stealing)/
  - *Visit:* [[https://github.com/qutebrowser/qutebrowser/issues/3819][Qutebrowser new window in background @ Github]]
  - *Visit:* [[https://stackoverflow.com/questions/9117507/linux-unix-command-to-determine-if-process-is-running][Determine if qutebrowser is running @ Overflow]]
***** DONE [BUG] Daemon messed up qtile focus
CLOSED: [2025-04-20 Sun 23:39] DEADLINE: <2025-04-21 Mon 22:00>
:LOGBOOK:
- Note taken on [2025-05-07 Wed 12:17] \\
**Run* ~qutebrowser --nowindow~ to create startup instance (faster access using ~qutebrowser_instance~ script) 
- !NOTE: Daemon is dead after killing first instance via ~:q~
:END:
- *OBJECTIVE:* /Check out Qutebrowser-daemon script/
  - *Visit:* [[https://gist.github.com/knatsakis/8cf329853330893cd2d7fa3dbd5692b0][Qutebrowse-daemon script @ Github]]
  - *Checkout:* [[Workaround window-bg][[BUG] Workaround daemon next window focus bug @ Org]]
**** DONE Spawn layout commands
CLOSED: [2025-05-21 Wed 23:28] DEADLINE: <2025-05-21 Wed 22:15>
:PROPERTIES:
:ID:       88bbe7c3-ba9a-4bad-adf8-b523dd0c1c26
:END:
- *OBJECTIVE:* /Create script to let qtile manage spawn position of new window/
  - *Run:* ~$ qtile cmd-obj -o layout -f spawn_split -a "qb 'URL'" "x"~ 
***** DONE Qtile spawn script
CLOSED: [2025-05-21 Wed 23:28]
- [X] *OBJECTIVE:* /Create script to let qtile manage spawn tab of new window/ [100%]
  - [X] Create ~script~
    - *Run:* ~$ qtile cmd-obj -o layout -f spawn_tab -a "qb 'URL' new_level=True"~
    - *Problem:* Prasing error when using cmd-obj and argument is ~int~ or ~bool~
      - *Solution:* [[https://github.com/qtile/qtile/issues/2433][Implement using python script for bash @Github-issue]]
  - [X] Create alias
  - [X] Crreate keybinds
*** DONE Hardware Acceleration
CLOSED: [2025-04-18 Fri 14:16] DEADLINE: <2025-04-16 Wed 16:00>
- *OBJECTIVE:* /Enable hardware acceleration/
- *Visit:* [[https://wiki.archlinux.org/title/Hardware_video_acceleration][Hardware acceleration doc @ Archwiki]]
- *References:* [[https://l.opnxng.com/r/qutebrowser/comments/s60a78/what_chromium_flags_do_you_use/][chromium flags @Reddit]]
*** DONE Create new-instance
CLOSED: [2025-06-05 Thu 05:02]
- [X] *OBJECTIVE:* /Setup qutebrowser-profiles for better session managements/ [100%]
  +- [X] *Run:* ~qutebrowser-profile --new --load "profile"~+
  - [X] *Run:* ~qutebrowser --basedir=<base-dir> --config-py=path/to/config~
    - *Complication:* New window with the same base dir failed to open in ~qtile-scratchpad~
    - *Solution:* [[https://github.com/whammou/dotfiles/commit/d894e08216b9e78ddb27f76b7a5e4367ee88ea7e][Workaround qtile not spawning window in scratchpad @Commit]]
*** DONE Yazi as file chooser
CLOSED: [2025-06-10 Tue 01:04]
- /*Objective:* Launch yazi as qutebrowser file chooser/
- *Checkout:* [[https://github.com/whammou/dotfiles/commit/30eabb566bf99855b962062abb685109482f9ef7][Set yazi as default file picker @Commit]]
- *Reference:* [[https://www.youtube.com/watch?v=ce2NOmTBWfo#__preview][Ranger as qutebrowser file chooser @Youtube]]
*** PENDING Userscripts
CLOSED: [2025-05-30 Fri 06:06]
- *OBJECTIVE:* /Learn to write userscripts in qutebrowser/
  - *References:*
    - [[https://github.com/hiway/python-qutescript][python-qutescript @Github]]
    - [[qute://help/settings.html#bindings.commands][Settings references @Qutebrowser-doc]]
    - [[qute://help/configuring.html][Keybinds and configuring @Qutebrowser-doc]]
*** DONE Qutebrowser modular configs
CLOSED: [2025-06-28 Sat 22:38]
- *Objective:* /Re-write qutebrowser and make it modular/
  - *File:* [[file:~/.config/qutebrowser/][config @Directory]]
  - *Checkout:* [[https://github.com/whammou/dotfiles/commit/8f1d1a0c68f3c7f3de95d91896047db420495bfa][Modularize qutebrowser config @Commit]]
- *References:* [[https://qutebrowser.org/doc/help/commands.html][Documentation @Qutebrowser]]
*** PENDING Change highlight colors using patch
- /*Objective:* Change chromium default highlight colors/
- *Reference:* [[https://github.com/qutebrowser/qutebrowser/discussions/5978][Change highlight colors with system patch @Github-issue]]
** PARTIAL Working with youtube [66%] :YOUTUBE:
CLOSED: [2025-06-05 Thu 02:01]
-  *OBJECTIVE:* /Use youtube for documentation:/
*** PENDING Package configurations [50%]
- *OBJECTIVE:* /Configure packages for smoother experiences/
**** DONE Youtube downloader - yt-dlp :YTDLP:
CLOSED: [2025-05-22 Thu 06:28]
- *OBJECTIVE:* /Increase yt-dlp downlaod speed/
  - *Configuration:*
    #+BEGIN_confini
    --force-ipv4
    --legacy-server-connect
    --throttled-rate 500K
    --concurrent-fragments 8
    #+END_confini
- Note taken on [2025-04-22 Tue 18:49] \\
  yt-dlp download file format in mpv
  #+BEGIN_SRC confini
  ytdl-format = 'worstvideo[height>=720]+bestaudio'
  #+END_SRC
  - Youtube [[https://github.com/yt-dlp/yt-dlp?tab=readme-ov-file][Cli-youtube-downloader @Github]]
**** PENDING Subtitle chooser :MPV:
- /Prioritize sub selection script/
  - *Visit:* [[https://github.com/CogentRedTester/mpv-sub-select][Mpv-sub-select @Github]]
*** DONE Youtube workflow integration
:LOGBOOK:
- Note taken on [2025-04-28 Mon 06:08] \\
Use ~xdg-utils-handlr~ along side with ~xdg-utils~ for extra features such as _regex-open_
:END:
CLOSED: [2025-04-22 Tue 18:49]
- /Sucessfully open/ ~yt-url~ /in/ ~mpv~ using:
  - *handlr:* [[id:0a3f8238-97cd-4aa2-a8dc-6ecea163efac][Default-application open method]]
  - *mpv:* [[id:20071104-5e85-4d24-82a5-cf897074ac96][Integrate mpv youtube link]]
*** DONE Youtube URL parameters
CLOSED: [2025-04-28 Mon 09:18]
- *OBJECTIVE:* /Set parameters in/ ~URL~ to create video snippets:
  - *Materials:*
    - [[https://developers.google.com/youtube/player_parameters?csw=1#Parameters][Player-parameters @Youtube-doc]]
    - [[https://l.opnxng.com/r/youtube/comments/2eu12t/modify_youtube_url_for_specific_start_and_stop/][youtube specify start AND stop time @Reddit]]
    - [[https://a.opnxng.com/exchange/stackoverflow.com/questions/68169842/is-there-a-comment-character-for-urls][Comments in url @Overflow]]
  - *Examples:*
    - [x] [[https://www.youtube.com/embed/WAm_S3K_zjg?start=01&end=51][with ~embed~ attr]]
    - [x] [[https://www.youtube.com/watch?v=rP5V2CkHJfo#__preview][with comment]]
    - [x] [[https://www.youtube.com/embed/WAm_S3K_zjg?start=01&end=51#__preview][With ~embed~ and ~comment~ ]]
**** DONE Mark URL as preview
CLOSED: [2025-06-05 Thu 02:00]
- *OBJECTIVE:* /Specify normal url or preview url/
  - *Visit:* [[id:20071104-5e85-4d24-82a5-cf897074ac96][Integrate mpv youtube link @Orgmode]]
- *Reference:* [[https://docs.mapp.com/v1/docs/url-encoding-and-what-characters-are-valid-in-a-uri][URL comment character @Search]]
** PARTIAL Kitty hint path error [66%] :KITTY:
CLOSED: [2025-06-08 Sun 05:17] DEADLINE: <2025-06-08 Sun>
:PROPERTIES:
:ID:       19cf96c7-877d-4504-b6fd-1db0310af1a6
:END:
1. [X] *OBJECTIVE:* Find solution to kitty hint returns wrong format
2. [ ] *OBJECTIVE:* Multiple hintting patterns
- *Complication:* Regex is never 100% accurate. There are either false positive or not enough matching [50%]
  1. [X] When use ~map <key> kitten hints --type hyperlink --type path --program "program~ kitty returns the wrong format of hinted hyperlink
  2. [ ] Kitty only hint 1 regex match at a time. Try to make it multiple patterns
- *Reference:*
  - [[https://sw.kovidgoyal.net/kitty/kittens/hints/#source-code-for-hints][Kitty hint documentation @Doc-kitty]]
  - [[https://github.com/kovidgoyal/kitty/issues/2124][Extended regex mode for kitty]]
** Zettelkasten with orgroam :ZETTELKASTEN:ORGROAM:
:PROPERTIES:
:ID:       1902d6da-cad7-4fd8-9de5-001ede5334e1
:END:
- *OBJECTIVE:* Implemment =ZK system= using =orgroam= framwork
*** Zettelkasten Vault
:PROPERTIES:
:ID:       e1fba411-956b-4add-b9d9-8882888d76c9
:END:
- *OBJECTIVE:* Create a Zettelkasten vault inside a [[id:5ee85686-4255-4634-afbc-c364fa16a025][PARA system]]
- *[NOTE]* taken on [2025-06-26 05:26]:
  Why a PARA on top of Zettelkasten? PARA system provide a rigid stucture that allows planning and ease of access information
  - Zettelkasten is good for developing ideas but managing tasks in not its strong suit due to its chaotic nature
  - PARA system allows information to be stored in a structured way that is easy in intuitive to access
  - Both system have pros and cons. Im plementing PARA on top of zettelkasten allow information to accessed and stored with ease
  - Problems facing when implement both systems:
*** ZK-Orgroam UID and index system
:PROPERTIES:
:ID:       9f057f7e-6a65-448a-b19d-784ecb100a46
:END:
- *OBJECTIVE:* Implement the ID system to the [[id:e1fba411-956b-4add-b9d9-8882888d76c9][Zettelkasten vault]]
- *[NOTE]* taken on [2025-06-26 17:12]:
  - A UID system is the core of zettelkasten and should serve a way to navigate between notes:
    - The system should have the benefits of the [[id:0ce0544c-320b-4aef-9bad-14564ee61474][original Luhmman's ZK system]]
    - The system should work in both zettelkasten and orgroam extension
- *[NOTE]* taken on [2025-06-28 23:27]:
    - =Orgmode= built-in UID system does not provide any context for each note
    - Spliting the UID system into two sub-system is more optimal
      - A built-in =orgroam= UID system
**** ZK-Orgroam UID sub-system
- *[NOTE]* taken on [2025-06-28 23:44]:
  - Provide a unique ID for each note to prevent overlap between notes
**** ZK-Orgroam Indexing sub-system
- *[NOTE]* taken on [2025-06-29 01:10]:
  - Each note has a [[id:242353ef-f564-47bf-985f-8816c09cd780][address]] that provides contexts
  - Improve search ability by using =address= as =filename=
  - Address follow Luhmann's [[id:f78fe37b-4ff7-4a73-86e9-16ccf28a4888][Naming convention]] (alphanumeric)
** Working With Orgroam :ORGROAM:
:PROPERTIES:
:ID:       4c2571b3-e416-48c0-bf7d-4d93af0ce820
:END:
- *OBJECTIVE:* Develop a notetaking workflow in orgroam
- *Reference:* [[https://github.com/chipsenkbeil/org-roam.nvim][Orgroam-nvim @Github]]
*** Orgroam Built-in UID System
:PROPERTIES:
:ID:       bc6b5a2e-214b-4e04-a8e7-f6444bebc3c5
:END:
- *[NOTE]* taken on [2025-06-28 23:35]:
  - =Orgroam= built-in UID system provide a unique identifier for each note (e.g. id:e1fba411-956b-4add-b9d9-8882888d76c9)
  - It solves the problem of having the same =id= on different notes
** Working with git :GIT:
- *OBJECTIVE:* /Improve workflow with nvim, fugitive, lazygit/
- *References:*
  - [[https://youtu.be/vtFXMni91Q4#__preview][Fugitive workflow @Youtube-preview]]
  - [[https://www.youtube.com/watch?v=G3NJzFX6XhY#__preview][Config your git @Youtube]]
*** Git Operations
/Understand the fundamentals of the git tool/
**** Git config
There are two locations a git config file can exist:
- *Local* git repo: in the repo itself (and ignored by ~.gitignore~)
- *Global* exist outside of the repo e.g. [[file:/home/whammou/.gitconfig][gitconfig]]
**** Git merge vs re-base vs squashing
There are different strategies to merge two ~branches~:
- *Merging:* Merge and ties together the ~history~ of both ~branches~
- *Re-basing:* Merge the ~commits~ of a branch to the *tip* of ~main~ and then performs a ~fast-forward-merge~
- *Squashing:* Squeeze all the ~commits~ of ~feature branch~ into one single ~commit~ and merge it with ~main~
**** Git commit vs stash
*Visit:* [[https://paulapivat.com/technical_notes/example_tech/git_stash/][Git Stash vs Git Commit]]
*** Write better commit messages
- *Goal(s):* Write better and more comprehensive commit messages
- *Stumble upon:* [[https://www.freecodecamp.org/news/how-to-write-better-git-commit-messages/]]
**** The Anatomy of a Commit Message
- *Basic:*
  =git commit -m <message>=
- *Detailed:*
  =git commit -m <title> -m <description>=
**** 5 Steps to write a better commit message
- Note taken on [2024-09-21 Sat 21:37] \\
  To come up with thoughtful commits consider the following: 
  - Why have I made these changes?
  - What effect have my changes made?
  - Why was the change needed?
  - What are the changes in reference?
    
1. *Capitalization and Punctuation:*
   Capitalize the first word and do not end in punctuation. If using /Convention Commits/, remember to use all lowercase
2. *Mood:*
   Use imperative mood in the subject line. *Example -* =Add fix= for =dark mode toggle state=. Imperative mood fives the tone you are giving in /order/ or /request/
3. *Type of Commit:*
   Specify the type of commit. It is recommended and can be even more beneficial to have consistent set of words to describe your changes. *Example:* /Bugfix/, /Update/, /Retractor/, /Bump/, and so on.
4. *Length:*
   The first line should ideally be no longer than 50 chars, and the body should be restricted to 72 chars
5. *Content:*
   Be direct, try to eliminate fillers words and phrases in theses sentences (*Example:* though, maybe, I think, kind of), Think like a journalist
**** Conventional Commits
Conventional Commit is a formatting convention that provides as set of rules to formulate a consistent commit message structure like so:

#+NAME: Conventional Commit structure
#+BEGIN_SRC
<type>[option scope]: <description>

[optional body]

[optional footer(s)]
#+END_SRC

The commit =type= can include the following:

- =feat= -a new feature is introduces with the changes
- =fix= -a bug fix has occurred
- =chore= -changes that do not relate to a fix or feature and don't modify src or test files (for example updating dependencies)
- =refractor= -refactored code that neither fixes a bug nor adds a feature
- =doc= - updates to documentation such as the README or other markdown files
- =style= -changes that do not affect the meaning of the code, likely realted to code formatting such as white-space, missing semi-colons, and so on
- =test= -including new or correcting previous tests
- =perf= -performance improvements
- =ci= -continuous integration related
- =build= -changes tha affect the build system or external dependencies
- =revert= -reverts a previous commit
  
/The commit type subject line should be all lowercase with a character limit to encourage succinct descriptions/

The =[optional commit body]= should be used to provide detail that cannot fit within the character limitations of the subject line description

It is also good location to utilize =BREAKING CHANGE: <description>= to note the reason for a breaking change within the commit

The =[footer]= is also optional. We use the footer to link the JIRA story what would be closed with these changes for example:
=Closes D2!I-<JIRA #>=

#+NAME: Full Conventional Commit Example
#+BEGIN_SRC
fix: fix foo to enable bar

This fixes the broken behavior of the component by doing xyz.

BREAKING CHANGE
Before this fix foo wasn't enabled at all, behavior changes from <old> to <new>

Closes D2IQ-12345
#+END_SRC

- *NOTE*
  The ensure that these committing conventions remain consistent across developers, commit message linting can be configured before changes are able to be pushed up. [[https://commitizen-tools.github.io/commitizen/][Commitizen]] is a great tool to enforce standards, sync up semantic versioning, along with other helpful features
*** Git automation
- *OBJECTIVE:* /Automate tasks with git/
- *References:* [[https://www.reddit.com/r/git/comments/xvz4he/automating_git_tasks_best_practices/][Automation with git @Reddit]]
*** Clean commit history
- *OBJECTIVE:* Clean up git commit history
- *Reference:* [[https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History][Git tools rewrite history @Doc-git]]
*** Securely storing secrets in git
- *OBJECTIVE:* Learn how to securely store secrets in git
** DOING Working with nvim snippets :NVIM:SNIPPET:
- *OBJECTIVE:* Custom snippets to boost productivity
*** DONE Friendly snippet insert date :FRIENDLYSNIP:
CLOSED: [2025-07-12 Sat 22:20] DEADLINE: <2025-07-12 Sat 22:30>
- *OBJECTIVE:* /Create note block with today inserted/
- *[NOTE]* taken on <2025-07-12 22:18>:
  Embed datetime to snippet via =friendly-snippet=
  #+BEGIN_SRC json
  "Note": {
    "prefix": "No",
    "body": "*[NOTE]* taken on <$CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE>:\n  $0"
  },
  #+END_SRC
- *References:*
  - [[https://l.opnxng.com/r/neovim/comments/wi4uf3/how_do_i_insert_current_date_or_time/][Insert today date in friendly snippet @Reddit]]
  - [[https://www.deepanseeralan.com/tech/insert-datetime-vscode-using-snippets/][Insert date and time in vscode @Blog]]
  - [[https://mybyways.com/blog/vs-code-snippet-to-insert-formatted-date-and-time][VScode snippet for date time @Blog]]
*** PENDING Setting up luasnip :LUASNIP:
- *OBJECTIVE:* Writing custom luasnip snippets
 *OBJECTIVE:* /Develop workflow with pandoc to convert between files/
