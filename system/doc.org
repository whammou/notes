#+TITLE: System Documents
#+DESCRIPTION: Description for archive here

* Archives :SYSTEM:LIB:
- /System archives/
** Documents :DOC:
/Documents archives/
*** PENDING Understanding git :GIT:
/Understand the fundamentals of the git tool/
**** Git config
There are two locations a git config file can exist:
 - *Local* git repo: in the repo itself (and ignored by ~.gitignore~)
 - *Global* exist outside of the repo e.g. [[file:/home/whammou/.gitconfig][gitconfig]]
**** Git merge vs re-base vs squashing
There are different strategies to merge two ~branches~:
 - *Merging:* Merge and ties together the ~history~ of both ~branches~
 - *Re-basing:* Merge the ~commits~ of a branch to the *tip* of ~main~ and then performs a ~fast-forward-merge~
 - *Squashing:* Squeeze all the ~commits~ of ~feature branch~ into one single ~commit~ and merge it with ~main~
**** Git commit vs stash
*Visit:* [[https://paulapivat.com/technical_notes/example_tech/git_stash/][Git Stash vs Git Commit]]
*** PENDING [#C] Integrate Google AI [%] :LINUX:
- *Goal:* integrate bard AI to workflow
- *Resource:* [[https://www.reddit.com/r/ChatGPT/comments/1akynsv/any_free_alternatives_to_open_ai_api/][Google AI Studio]]  [[https://ai.google.dev/docs][Google AI docs]]
**** DONE Create API
CLOSED: [2025-01-10 Fri 02:28]
- *Goal(s):* successfully obtain working API for Google Gemini
- *Resource:* [[https://console.cloud.google.com/apis/credentials?pli=1&inv=1&invt=AbmaIA][Google cloud console]]
  - Obtain working API through google cloud console
  - NOTE: only 1 API per project

- *Note:* looking up for platform free tier limitation
**** DONE Make request
CLOSED: [2025-01-10 Fri 02:27]
- *Goal(s):* make request from terminal to Gemini
- *Note:* use the [[https://ai.google.dev/api/generate-content#method:-models.generatecontent][~generateContent~]] to make request to Gemini API
  - #+NAME: Make request to Gemini API
  #+BEGIN_SRC python
  import google.generativeai as genai

  genai.configure(api_key="YOUR_API_KEY")
  model = genai.GenerativeModel("gemini-1.5-flash")
  response = model.generate_content("Explain how AI works")
  print(response.text)
  #+END_SRC
**** PENDING Shell Integration
- *Goal(s):* working on integrate AI with ~kitty~
***** Nvim integration :NVIM:
- *Goal(s):* render response in markdown to take advantage of nvim markdown render
***** PENDING Shellgpt run-test :LINUX:
- *Goal(s):* run test shellgpt with Gemini AI
- *Stumble upon:* 
  - Github: [[https://github.com/TheR1D/shell_gpt/issues/514][discussion]]
**** Working with Google AI
- *Goal(s):* create workspace with [[https://pypi.org/project/google-generativeai/][google-generativeai sdk]]
- *Resources:*  [[https://github.com/google-gemini/cookbook][cookbook]]  [[https://ai.google.dev][documentation]]
*** PENDING Learn Docker
CLOSED: [2025-05-24 Sat 01:19]
- /Learn to operate dockers/
*** DONE Nvim-lsp :NVIM:
CLOSED: [2025-05-24 Sat 01:19]
Nvim supports the Language Server Protocol (LSP), which means it acts as a client to LSP servers and includes a Lua framework `vim.lsp` for building enhanced LSP tools
- *Run:* ~:help lsp~ for nvim-lsp guide
- Setup [[https://github.com/neovim/nvim-lspconfig][nvim-lspconfig]]
**** Language sever
The ~Language Server Protocol~ (LSP) is an open, JSON-RPC-based protocol for use between source code editors or ~integrated development environments~ (IDES) and ~servers~ that provides /language intelligence tools/
**** Markup language server
Generally a good markup language server is texlab
- *Resources:* [[https://github.com/latex-lsp/texlab][texlab]]
*** DONE Nvim optimization :NVIM:
CLOSED: [2025-05-24 Sat 01:20]
- *Goal:* research ways to optimize nvim and manage new packages
**** DONE Setup LazyVim :NVIM:
CLOSED: [2025-01-24 Fri 21:31] DEADLINE: <2025-01-25 Sat 18:00>
- *Goal(s):* convert [[~/dotfiles/nvim/.config/nvim/init.vim][init.vim]] to [[~/dotfiles/nvim-lua/.config/nvim/init.lua][init.lua]]
  - Run ~nvim +:help lua_guide"~ for built-in conversion guide from vim script to lua
- *Checkout:* [[http://www.lazyvim.org/]]
- *Stumble upon:* [[https://github.com/nanotee/nvim-lua-guide][nvim-lua-guide]]
***** DONE LazyVim modular
CLOSED: [2025-05-24 Sat 01:20]
- *Goal(s):* convert singular ~init.vim~ to  [[https://www.kurtpeniket.tech/blog/neovim_lua_transition_vimplug_to_lazy][modular config]] with vim config structure

  #+NAME: overall stucture
  #+BEGIN_SRC
  .
  ├── init.lua
  ├── lazy-lock.json
  ├── lua
  │   ├── general.lua
  │   ├── lsp_config.lua
  │   ├── mappings.lua
  │   └── plugins.lua
  ├── old_init.vim
  └── spell
      ├── en.utf-8.add
      └── en.utf-8.add.spl
  #+END_SRC
****** LazyVim plugins
- *Goal:* adding and configuring plugins
****** LazyVim mappings
- *Goal:* adding keymaps

- Source ~kepmaps.lua~ from ~config/init.lua~:
  - In ~config/init.lua~:

- *Keymapping syntax:*
  - Keymappings can be set using command: ~vim.keymap.set()~ method
  - Set ~map~ variable for clean format: ~local map = vim.keymap.set~
	 - Consult ~:help vim.keymap.set()~ for more parameter information
***** Convert vim-script to LazyVim
- *Goal(s):* replace plugin manager to [[https://github.com/folke/lazy.nvim][lazy.nvim]] for seamless integration with lua config
****** LazvyVim installation
- *Structured Setup:*
  #+NAME: /.config/nvim/init.lua
  #+BEGIN_SRC lua
  require("config.lazy")
  #+END_SRC  
****** LazyVim add plugins
- Plugins are installed under ~$HOME/.config/nvim/lua/plugins/*.lua~ - every lua files under this dir are auto-merged with the config file
- Plugin spec example:
  #+NAME: spec example
  #+BEGIN_SRC lua
  return {
    "folke/neodev.nvim",
    "folke/which-key.nvim",
    { "folke/neoconf.nvim", cmd = "Neoconf" },
  }
  #+END_SRC
- More on plugin spec, visit: [[https://lazy.folke.io/spec]]
**** DONE Switching nvim configs
CLOSED: [2025-01-15 Wed 21:19] DEADLINE: <2025-01-14 Tue 22:00>
- *Goal:* successfully switching between different config dir
- *Resource:* [[https://michaeluloth.com/neovim-switch-configs/][switching config]]
*** DONE Tweaking archlinux [75%] :LINUX:
CLOSED: [2025-01-06 Mon 07:34] SCHEDULED: <2024-12-30 Mon 02:00-04:00>
- *Goal:* recover linux from unexpected shutdown
- *Stumble upon:*  [[https://www.reddit.com/r/archlinux/comments/m2wf1s/shutdown_during_update/][r/archlinux]]
**** DONE Chroot from live USB
CLOSED: [2025-04-19 Sat 07:58]
- *Goal(s):* chroot from a live usb
**** DONE Arch Linux hibernation
CLOSED: [2025-04-19 Sat 07:55] DEADLINE: <2025-01-06 Mon 03:00>
- Note taken on [2025-01-06 Mon 01:48] \\
  Hibernation for btrfs partitions

- *Goal(s):* setup ~hibernation~ for archlinux
- *Source(s):* [[https://wiki.archlinux.org/title/Power_management/Suspend_and_hibernate#Hibernation][hibernation@archwiki]]
**** DONE Update grub parameters
CLOSED: [2025-04-19 Sat 07:58]
- *Goal(s):* update grub boot parameters to splash ~screen~ and hide grub ~menu~
  - Add ~splash~ parameter to kernel parameter: ~GRUB_CMDLINE_LINUX_DEFAULT="... splash"~
  - Add ~hidden~ parameter to ~GRUB_TIMEOUT_STYLE~: ~GRUB_TIMEOUT_STYLE=hidden~
**** DONE Enable zswap
CLOSED: [2025-04-19 Sat 07:58]
- *Goal(s):* enable system zswap on boot
  - Add ~zswap.enable=1~ to kernel parameter: ~GRUB_CMDLINE_LINUX="... zswap.enabled=1"~
**** DONE Config ~pacman~
CLOSED: [2025-04-19 Sat 07:58]
- *Goal(s):* config ~pacman~ to:
  - Output colors: ~Colors~
  - have a funny animation ~IloveCandy~
**** TODO Select io scheduler
- /Change/ ~udev~ /rules for ioscheduler/
**** TODO CPU and IRQ scheduler
- /Setup CPU and IRQ scheduler/ ~daemon~
**** DONE Fix screen tearing
CLOSED: [2025-05-21 Wed 18:21]
- *Goal:* /Rock archlinux without a compositor/
  - *References:* [[id:263ea0db-b98c-4775-9628-220682a48918][Intel TearFree @Orgmode]]
*** DONE Modular Qtile :QTILE:
CLOSED: [2025-03-20 Thu 22:09]
- *Goal:* successfully modularize ~qtile~ config
- Config directory: 
  - [x] Keymaps config: /create ~keymaps.py~/dot_examples
  - [x] Colorscheme config: /create ~colorschemes.py~/
  - [x] Layouts config: /create ~layouts.py~/
  - [x] Scratepad config: /create ~scratepads.py~/
  - [x] Options config: /create ~options.py~/
- Working-tree dir:
*** PENDING Linux web-scrapping :LINUX:
CLOSED: [2025-05-24 Sat 01:20]
- /Find linux web-scrapping methods/
*** DONE Default-application open method [100%] :LINUX:
CLOSED: [2025-05-24 Sat 01:20]
:PROPERTIES:
:ID:       0a3f8238-97cd-4aa2-a8dc-6ecea163efac
:END:
- [[https://github.com/chmln/handlr][handlr]] /vs/ [[https://xyne.dev/projects/mimeo/][mimeo]] - at better ~xdg-utils~
  - *Visit:* [[https://wiki.archlinux.org/title/Default_applications][default-opener methods]]
**** DONE Open with handlr :HANDLR:
CLOSED: [2025-04-22 Tue 03:09]
- /A better xdg-utils/
  - *Project-link:* [[https://github.com/chmln/handlr][github.com@handlr]]
  - *Visit:* mimeo-style custom association style: [[https://github.com/chmln/handlr/issues/57][issue]]
**** ABORTED Open with mimeo :MIMEO:
CLOSED: [2025-04-22 Tue 03:09]
- /Open files in mime types using regular expression/
  - *Project-link:* [[https://xyne.dev/projects/mimeo/][mineo documentation]]
**** DONE Integrate mpv youtube link :MPV:
CLOSED: [2025-04-22 Tue 03:08]
:PROPERTIES:
:ID:       20071104-5e85-4d24-82a5-cf897074ac96
:END:
- /Yank/ ~mpv~ /current file/ ~yt-url~
  - *Visit:* 
    - [ ] [[https://github.com/raphaeltannous/mpv-copyStuff][mpv-yankstuff]]
    - [ ] ~xdg-open~ specific ~cmd~ to open specific ~url~:
      - [[https://a.opnxng.com/exchange/unix.stackexchange.com/questions/777237/open-specific-urls-in-certain-app][xdg-open limitations]]
      - [[https://wiki.archlinux.org/title/Default_applications#mimeo][Archwiki#mimeo]]
  - *Example:*
    - [[https://www.youtube.com/watch?v=ryR2-jVjoeA&t=15][Trailer starts at 00:15]]
    - [[https://www.youtube.com/watch?v=jv4pDOKe7OE&t=30][Test video starts at 00:30]]
    - [[https://www.youtube.com/watch?v=jv4pDOKe7OE?start=53&end=59][Youtube link with start and end time]]
*** DONE Linux tear-free [100%] :LINUX:
CLOSED: [2025-05-21 Wed 18:01]
- *Goal:* /Dicide to run with a ~compositor~ or without/
  - *References:* 
    - [[https://l.opnxng.com/r/archlinux/comments/bs1ban/compositor_or_no_compositor/][Compositor or not @Reddit]]
    - [[https://www.dedoimedo.com/computers/linux-intel-graphics-video-tearing.html][Fix video tearing on linux @Blog]]
**** DONE Intel TearFree :INTEL:
CLOSED: [2025-05-20 Tue 16:34]
:PROPERTIES:
:ID:       263ea0db-b98c-4775-9628-220682a48918
:END:
- *Goal:* /Achieve Tearfree without using a ~compositor~/
  - *References:* 
    - [[https://bbs.archlinux.org/viewtopic.php?id=227609][TearFree doesn't work @Archforum]]
    - [[https://wiki.archlinux.org/title/Intel_graphics#Tearing][Troubleshooting-tearing @Archwiki]]
**** DONE Fix kitty tear free :KITTY:
CLOSED: [2025-05-20 Tue 16:33]
- *Goal:* /Achieve tearless with kitty/
  - *Config:* Add this to your config file: [[file:~/.config/kitty/kitty.conf][config @kitty]]
  - *Run:* ~sync_to_monitor = yes~
**** DONE Fix qutebrowser tear free :QUTEBROWSER:
CLOSED: [2025-05-21 Wed 18:01]
- *Goal:* /Achieve tearless with qutebrowser/
**** DONE Fix mpv tear :MPV:
CLOSED: [2025-05-21 Wed 18:15]
- *Goal:* /Achieve flawless video playback/
  - *Config:*
    #+BEGIN_confini
    video-sync=display-resample
    interpolation=yes
    #+END_confini
*** DONE Config yazi [100%] :YAZI:
CLOSED: [2025-05-22 Thu 06:25]
- *Goal:* /Better workflow with yazi/
**** DONE Integration Lazygit :LAZYGIT:
CLOSED: [2025-05-22 Thu 06:20]
- *Goal:* /Successfully integrate ~lazygit~ in ~yazi~/
  - *References:* [[https://github.com/sxyazi/yazi/discussions/1989][Integrate lazygit with yazi @Github-issue]]
**** ABORTED Keybinds
CLOSED: [2025-05-22 Thu 06:21]
- *Goal:* separate hotkeys into ~EDIT~ and ~VIEW~:
  - [ ] Bind short-key to open ~EDIT~ such as: images, texts, docs
  - [ ] Bind short-key to open ~VIEW~ - view only for images and texts/docs
**** DONE Yazi fish integration [0%] :YAZI:
CLOSED: [2025-04-19 Sat 17:49] DEADLINE: <2025-04-19 Sat 17:00>
- /Open yazi at typed dir in fish shell/
*** DONE Config vim completion [100%] :NVIM:
CLOSED: [2025-05-23 Fri 01:44]
- *Goal:* successfully replace ~ultil-snip~ with ~blink-nvim~ and ~lua-snip~
- *Visit:* [[https://a.opnxng.com/exchange/vi.stackexchange.com/questions/41733/how-to-set-up-luasnip-in-neovim-w-lsp-zero][nvim-cmp#external-sources]]
**** DONE Configure lua-snip
CLOSED: [2025-04-19 Sat 06:11] DEADLINE: <2025-04-18 Fri 19:00>
- *Goal(s):* configure and learn ~lua-snip~ syntax
- *Visit:*
  - *Youtube:* [[https://youtube.com/watch?v=GxnBIRl9UmA][luasnip setup]]
  - *Setup:*
     - [[https://evesdropper.dev/files/luasnip/ultisnips-to-luasnip/][nvim luasnip setup]]
     - [[https://sbulav.github.io/vim/neovim-setting-up-luasnip/][Neovim setting up snippets with luasnip]]
**** DONE Configure blink.cmp
CLOSED: [2025-04-30 Wed 22:05] DEADLINE: <2025-04-30 Wed 18:00>
- /Successfully source/ ~lua-snip~ /with/ ~blink.cmp~
- *Visit:* 
  - [[https://cmp.saghen.dev/configuration/snippets#luasnip][source luasnip guide]]
  - [[https://cmp.saghen.dev/configuration/snippets#luasnip][blink.cmp documentaion]]
  - [[https://github.com/Saghen/blink.cmp/discussions/1391][blink.cmp luasnip issue]]
**** DONE Write friendly-snippets
CLOSED: [2025-04-30 Wed 22:05] DEADLINE: <2025-04-30 Wed 18:30>
- /Write snippets in VSCode style or using/ ~luasnip~
- *Visit:*
  - [[https://code.visualstudio.com/docs/editor/userdefinedsnippets][Snippets in vscode]]
  - [[https://github.com/L3MON4D3/LuaSnip/issues/281][Importing custom vscode snippets stopped working]]
**** ABORTED Configure nvim-lsp
CLOSED: [2025-03-16 Sun 20:23]
- *Goal(s):* configure ~nvim-lsp~
**** ABORTED configure nvim-cmp
CLOSED: [2025-03-16 Sun 20:23]
- *Goal(s):* configure ~nvim-cmp~
*** DONE Overhaul Note repo [100%] :ORGMODE:GITHUB:
CLOSED: [2025-05-13 Tue 18:11] DEADLINE: <2025-05-13 Tue 20:00>
- *Goal(s):* update note repo structure for more optimal workflow
- *NOTE:* checkout [[./README.org][README]] and find a suitable repo structure
**** ABORTED Modify README
CLOSED: [2025-04-11 Fri 21:41]
- *Goal(s):* modify and add README content
  - [ ] modify [[./README.org::repo-hierarchy][Hierarchy]]
  - [ ] add template structure
**** DONE Separate archive hierarchy
CLOSED: [2025-05-13 Tue 18:11]
- Note taken on [2025-01-23 Thu 00:09] \\
  Separate ~Logs~ ~Lists~ and ~Documents~ to different files to avoid callbacks
- *Goal:* optimize ~archive~ hierarchy
*** PENDING Organize Script repo :GITHUB:
Organize ~scripts~ in ~/scipts~ and ~scripts~ in ~$PATH~
- [ ] Organize ~/scripts~
- [ ] Oragnize [[file:/home/whammou/notes/capture.org::*Qtile scripts][qtile]] scripts
- [ ] Oragnize ~$PATH~
*** PENDING System Proxy and DNS :SYSTEM:
Access blocked websites via ~proxy~ or changeing ~DNS~
